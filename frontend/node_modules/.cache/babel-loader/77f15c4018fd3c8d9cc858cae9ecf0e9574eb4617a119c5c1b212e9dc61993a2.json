{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NITYAM TRIPATHI\\\\OneDrive\\\\Desktop\\\\Voting app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractAbi, contractAddress } from \"./Constant/constant\";\nimport Login from \"./Components/Login\";\nimport Connect from \"./Components/Connect\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [votingStatus, setVotingStatus] = useState(true);\n  const [remainingTime, setremainingTime] = useState(\"\");\n  const [candidates, setCandidates] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const [CanVote, setCanVote] = useState(true);\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  });\n  async function getCurrentStatus() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    await provider.send(\"eth_requestAccounts\", []);\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const status = await contractInstance.getVotingSta;\n  }\n  function handleAccountsChanged(accounts) {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      setAccount(accounts[0]);\n    } else {\n      setIsConnected(false);\n      setAccount(null);\n    }\n  }\n  async function connectToMetamask() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        console.log(\"Metamask Connected:\" + address);\n        setIsConnected(true);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      console.log(\"Please Install Metamask\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(Connect, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      connectWallet: connectToMetamask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j23ZJZp79O2f1yctP/e8Mt1OJxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","contractAbi","contractAddress","Login","Connect","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","isConnected","setIsConnected","votingStatus","setVotingStatus","remainingTime","setremainingTime","candidates","setCandidates","number","setNumber","CanVote","setCanVote","window","ethereum","on","handleAccountsChanged","removeListener","getCurrentStatus","providers","Web3Provider","signer","getSigner","send","contractInstance","Contract","status","getVotingSta","accounts","length","connectToMetamask","address","getAddress","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","connectWallet","_c","$RefreshReg$"],"sources":["C:/Users/NITYAM TRIPATHI/OneDrive/Desktop/Voting app/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractAbi, contractAddress } from \"./Constant/constant\";\nimport Login from \"./Components/Login\";\nimport Connect from \"./Components/Connect\";\n\nimport \"./App.css\";\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [votingStatus, setVotingStatus] = useState(true);\n  const [remainingTime, setremainingTime] = useState(\"\");\n  const [candidates, setCandidates] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const [CanVote, setCanVote] = useState(true);\n\n  useEffect( () => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n\n    return() => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    }\n  });\n\n  async function getCurrentStatus(){\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    await provider.send(\"eth_requestAccounts\",[]);\n    const contractInstance = new ethers.Contract(contractAddress,contractAbi,signer);\n    const status = await contractInstance.getVotingSta\n  }\n\n  function handleAccountsChanged(accounts){\n    if(accounts.length > 0 && account!==accounts[0]){\n      setAccount(accounts[0]);\n    }\n    else{\n      setIsConnected(false);\n      setAccount(null);\n    }\n  }\n\n  async function connectToMetamask() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        await provider.send(\"eth_requestAccounts\",[]);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        console.log(\"Metamask Connected:\"+address);\n        setIsConnected(true);\n      } catch (error) {\n        console.log(error)\n      }\n    }else{\n      console.log(\"Please Install Metamask\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        isConnected ? (<Connect account={account} />) : (<Login connectWallet={connectToMetamask}/>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}